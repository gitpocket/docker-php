# Ensure we leverage the parent's test suite, that we have not introduced any nginx-level issues
gossfile:
  ../nginx/base.goss.yaml: {}

user:
  www-data:
    exists: true
group:
  www-data:
    exists: true

command:
  # Only confirm that these commands exit cleanly, with no error output.
  # Version constraints have been pushed down to the variant-level test, since they are different
  php -m:
    exit-status: 0
    stderr: ['!/./']
  php -v:
    exit-status: 0
    stderr: ['!/./']
  php-fpm -m:
    exit-status: 0
    stderr: ['!/./']
  php-fpm -v:
    exit-status: 0
    stderr: ['!/./']
  # Hack: to test and validate by-default disabled extensions [without side effects]
  # 1. run php with no ini file (-n)
  # 2. pass ini key-value (-d), enable the single extension to test
  # 3. list the newly loaded php mods (-m)
  # 4. grep the output of the loaded mods for the one under test
  php -n -d extension=yaml.so -m | grep yaml:
    exit-status: 0
    stderr: ['!/./']
  php -n -d extension=pgsql.so -m | grep pgsql:
    exit-status: 0
    stderr: ['!/./']
  # Note: pdo_pgsql requires pdo to also be present in order to be loaded properly
  php -n -d extension=pdo.so -d extension=pdo_pgsql.so -m | grep pdo_pgsql:
    exit-status: 0
    stderr: ['!/./']
